import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { HttpClient } from '@angular/common/http';

const API_URL = 'https://api.snappcar.nl/v2/search/query';

@Injectable({ providedIn: 'root' })
export class CarSearchService {
  constructor(private http: HttpClient) {}

  searchCars$(
    lng: string,
    lat: string,
    maxDistance = 3000,
    sort = CarSearchSortOrder.Price,
    country = CarSearchCountry.NL
  ): Observable<CarSearchResponse> {
    return this.http.get<CarSearchResponse>(API_URL, {
      params: {
        lng,
        lat,
        country,
        'max-distance': maxDistance,
        sort,
      },
    });
  }
}

/**
 * The following types might also be defined in a separate directory
 * (e.g. types or models) but have been included in the service
 * class for brevity.
 * Better yet, I would want to see these types being generated by
 * the back-end docs!
 */

export interface CarSearchResponse {
  results: CarResult[];
  sums: {
    totalResults: number;
  };
  searchId: string;
}

export type CarResult = {
  car: Car;
  user: CarUser;
  ci: string;
  distance: number;
  flags: {
    favorite: boolean;
    new: boolean;
    instantBookable: boolean;
    isKeyless: boolean;
    previouslyRented: boolean;
  };
  priceInformation: CarPriceInformation;
};

export type Car = {
  fuelType: string;
  createdAt: string;
  year: number;
  make: string;
  gear: string;
  model: string;
  seats: number;
  ownerId: string;
  bodyType: string;
  reviewCount: number;
  allowed: string[];
  accessories: string[];
  images: string[];
};

export type CarUser = {
  firstName: string;
  imageUrl: string;
  street: string;
  city: string;
};

export type CarPriceInformation = {
  price: number;
  pricePerKilometer: number;
  freeKilometersPerDay: number;
  rentalDays: number;
  isoCurrencyCode: CurrencyCode;
};

export enum CarSearchSortOrder {
  Price = 'price',
  Recommended = 'recommended',
  Distance = 'distance',
}

export enum CarSearchCountry {
  NL = 'NL',
}

export type CurrencyCode = 'EUR' | 'SEK';
